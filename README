Architecture of Submission files :

I - Folder Simulation_system_files

All files used to create our different protein + environment systems and molecular dynamics inputs for each of them are placed in this folder.

For each simulation, files necessary to produce the dynamics are placed in different folders corresponding to the different steps:

1) charmm_preparation
CHARMM-GUI (https://charmm-gui.org/) has been used to prepare the template for the input files, that have been furter modified by us to fullfill our specific requirements and run with our local installation of CHARMM software (v40b2).

The protocol to create the system is as follows:
1   - step1_pdbreader.inp with the original pdb or crd protein structure files
2   - step2_orient.inp
3.1 - step3_size.inp
3.2 - step3_packing.inp
4.1 - step4_lipid.inp
4.2 - step4.2_waterbox.inp
4.3 - step4.3_ion.inp
5.1 - step5_assembly.inp
5.2 - step5_input.inp  

Files generated at the end of the protocol (step5_assembly .pdb/.psf/.crd/.str) necessary to perform MD simulations have been placed in the namd_equilibration folder (see below).


2) namd_equilibration
An equilibration phase is performed with the namd software (v2.13, available at https://www.ks.uiuc.edu/Development/Download/download.cgi?PackageName=NAMD). Restraints have been applied to the lipids, protein and cofactors. These restraints are reduced during the different steps of equilibration, following the CHARMM-GUI protocol.

We created the .ref files, necessary to apply the restraints, with two in-house fortran programs (modpdb.f90; create_dihe.f90), provided in the restraints_script folder. These two programs use as input the step5_assembly.pdb file.
The final .ref files are also put in the restraints folder of namd_equilibration section.

Final psf files for each system have been renamed nox5st1/st2.psf depending of the interheme electronic state of the simulation.


3) namd_production
The production of our molecular dynamics has been done with the namd software (v2.13) by fractions of 15ns (repeated 40 times to achieve 600ns of simulation). We provide the input files for the first run of 15ns.



II - Folder Marcus_analysis

A) Analysis of the distribution of the lipids
lipid_distance2D.py: Python script using the MDAnalysis package to compute the 2D distances between each lipid and the heme localized in the same leaflet (see manuscript) for a given trajectory. The data is written in a pkl file (Pickle package) that is later used to generate figure 10 and figure S12A-B-C-D.

B) ET free energy computations

For each system, ET Marcus parameters have been computed and data gathered in a respective folder (h/cs)nox5_mb(W/H). We give all the scripts used to compute and perform the analysis presented in the manuscript entitled "NOX transmembrane electron transfer is governed by a subtly balanced, self-adjusting charge distribution."

1) energy_calculation 
nrj_stX.inp : namd input scripts for energy computation with namd software.
sub_gap_stX.sh: bash script to run the computation of energies and their decompositions in redox state X with namd
psf_folder : All the psf files necessary to compute the different contributions of the total potential energy in each redox state.
start_folder : Necessary parameter files needed to compute the potential energies in the different simulations. 

2) electronic_gap_computation
marcus_interheme.py : python script to treat the potential energies obtained in the previous energy calculation and compute the vertical energy gaps and free energy of ET.

data_folder :
All the results data used in the article necessary to reproduce figures 8, 9, 10 and supplementary figures S9, S10, S11, and S12.
nrj_stX_eY_1_40.dat : total potential energy (and its different contributions) on redox state Y computed on the trajectory performed in redox state X.
deltaG_xx.pkl : file containing the total free energy and its contributions (along with uncertainty) computed over the second half of the simulations for system xxxx. These files are generated by marcus_interheme.py script using the Python pickle package.
lipid_distances2D_xxx_stX.pkl : Output file of lipid_distances2D.py script for system xxx in redox state X.
replicas_folder : data for each replica simulation


C) Generation of figures 
Folder figures_generation contains Python scripts to generate figures 8, 9, 10 (a and b) and supplementary figures S9, S10, S11, and S12 (a,b,c,d) from manuscript entitled "NOX transmembrane electron transfer is governed by a subtly balanced, self-adjusting charge distribution.". The data needed to make the figures is provided for each systme in the data_folder directory described previously.
